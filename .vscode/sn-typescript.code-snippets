{
	"SN API Class": {
		"scope": "typescript",
		"prefix": "sn-api",
		"body": [
			"interface I${1:ClassName}Base extends \\$\\$snClass.ICustomClassBase<I$1Base, \"$1\"> {",
			"}",
			"",
			"interface I$1Prototype extends \\$\\$snClass.ICustomClassPrototype0<I$1Base, I$1Prototype, \"$1\">, I$1Base {",
			"}",
			"",
			"declare type $1 = Readonly<I$1Base>;",
			"",
			"interface $1Constructor extends \\$\\$snClass.CustomClassConstructor0<I$1Base, I$1Prototype, $1> {",
			"}",
			"const $1: $1Constructor = (function (): $1Constructor {",
			"",
			"    var ${1/\\s*(\\S+)/${1:/downcase}/}Constructor: $1Constructor = Class.create();",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.prototype = {",
			"",
			"        initialize(): void { },",
			"",
			"        type: \"$1\"",
			"    };",
			"",
			"    return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor;",
			"})();"
		],
		"description": "Create ServiceNow API class"
	},
	"SN API Class (1 arg)": {
		"scope": "typescript",
		"prefix": "sn-api-1",
		"body": [
			"interface I${1:ClassName}Base extends \\$\\$snClass.ICustomClassBase<I$1Base, \"$1\"> {",
			"}",
			"",
			"interface I$1Prototype extends \\$\\$snClass.ICustomClassPrototype1<I$1Base, I$1Prototype, \"$1\", ${2:any}>, I$1Base {",
			"    _${3:value}?: $2;",
			"}",
			"",
			"declare type $1 = Readonly<I$1Base>;",
			"",
			"interface $1Constructor extends \\$\\$snClass.CustomClassConstructor1<I$1Base, I$1Prototype, $1, $2> {",
			"    new($3: $2): $1;",
			"    ($3: $2): $1;",
			"}",
			"",
			"const $1: $1Constructor = (function (): $1Constructor {",
			"",
			"    var ${1/\\s*(\\S+)/${1:/downcase}/}Constructor: $1Constructor = Class.create();",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.prototype = {",
			"",
			"        initialize($3?: $2): void {",
			"            this._$3 = $3",
			"        },",
			"",
			"        type: \"$1\"",
			"",
			"    };",
			"",
			"    return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor;",
			"})();"
		],
		"description": "Create ServiceNow API class with 1 constructor parameter"
	},
	"SN API Class (2 args)": {
		"scope": "typescript",
		"prefix": "sn-api-2",
		"body": [
			"interface I${1:ClassName}Base extends \\$\\$snClass.ICustomClassBase<I$1Base, \"$1\"> {",
			"}",
			"",
			"interface I$1Prototype extends \\$\\$snClass.ICustomClassPrototype2<I$1Base, I$1Prototype, \"$1\", ${2:any}, ${3:any}>, I$1Base {",
			"    _${4:value1}?: $2;",
			"    _${5:value2}?: $3;",
			"}",
			"",
			"declare type $1 = Readonly<I$1Base>;",
			"",
			"interface $1Constructor extends \\$\\$snClass.CustomClassConstructor2<I$1Base, I$1Prototype, $1, $2, $3> {",
			"    new($4: $2, $5: $3): $1;",
			"    ($4: $2, $5: $3): $1;",
			"}",
			"",
			"const $1: $1Constructor = (function (): $1Constructor {",
			"",
			"    var ${1/\\s*(\\S+)/${1:/downcase}/}Constructor: $1Constructor = Class.create();",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.prototype = {",
			"",
			"        initialize($4: $2, $5: $3): void {",
			"            this._$4 = $4",
			"            this._$5 = $5",
			"        },",
			"",
			"        type: \"$1\"",
			"",
			"    };",
			"",
			"    return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor;",
			"})();"
		],
		"description": "Create ServiceNow API class with 2 constructor parameters"
	},
	"SN Ajax API Class": {
		"scope": "typescript",
		"prefix": "sn-ajax-api",
		"body": [
			"interface I${1:ClassName}Base extends \\$\\$snClass.ICustomClassBase<I$1Base, \"$1\"> {",
			"    ${2:methodName}(): ${3:void};",
			"}",
			"",
			"interface I$1Prototype extends \\$\\$snClass.ICustomClassPrototype0<I$1Base, I$1Prototype, \"$1\">, I$1Base {",
			"}",
			"",
			"declare type $1 = Readonly<I$1Base>;",
			"",
			"interface $1Constructor extends \\$\\$snClass.CustomClassConstructor0<I$1Base, I$1Prototype, $1> {",
			"    $2(): $3;",
			"}",
			"",
			"const $1: $1Constructor = (function (): $1Constructor {",
			"",
			"    var ${1/\\s*(\\S+)/${1:/downcase}/}Constructor: $1Constructor = Class.create();",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.$2 = function(): $3 {",
			"        throw new Error(\"Method not implemented\");",
			"    },",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.prototype = Object.extendsObject<IAbstractAjaxProcessor, I$1Prototype>(global.AbstractAjaxProcessor, {",
			"",
			"        initialize(): void { },",
			"",
			"        $2(this: IAbstractAjaxProcessor & I$1Prototype): $3 {",
			"            return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.$2();",
			"        },",
			"",
			"        type: \"$1\"",
			"",
			"    });",
			"",
			"    return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor;",
			"})();"
		],
		"description": "Create client-callable ServiceNow API class"
	},
	"SN Ajax API Class (1 arg)": {
		"scope": "typescript",
		"prefix": "sn-ajax-api-1",
		"body": [
			"interface I${1:ClassName}Base extends \\$\\$snClass.ICustomClassBase<I$1Base, \"$1\"> {",
			"    ${2:methodName}(): ${3:void};",
			"}",
			"",
			"interface I$1Prototype extends \\$\\$snClass.ICustomClassPrototype1<I$1Base, I$1Prototype, \"$1\", ${4:any}>, I$1Base {",
			"    _${5:value}?: $4;",
			"}",
			"",
			"declare type $1 = Readonly<I$1Base>;",
			"",
			"interface $1Constructor extends \\$\\$snClass.CustomClassConstructor1<I$1Base, I$1Prototype, $1, $4> {",
			"    new($5: $4): $1;",
			"    ($5: $4): $1;",
			"",
			"    $2(): $3;",
			"}",
			"",
			"const $1: $1Constructor = (function (): $1Constructor {",
			"",
			"    var ${1/\\s*(\\S+)/${1:/downcase}/}Constructor: $1Constructor = Class.create();",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.$2 = function(): $3 {",
			"        throw new Error(\"Method not implemented\");",
			"    },",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.prototype = Object.extendsObject<IAbstractAjaxProcessor, I$1Prototype>(global.AbstractAjaxProcessor, {",
			"",
			"        initialize($5?: $4): void {",
			"            this._$5 = $5",
			"        },",
			"",
			"        $2(this: IAbstractAjaxProcessor & I$1Prototype): $3 {",
			"            return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.$2();",
			"        },",
			"",
			"        type: \"$1\"",
			"",
			"    });",
			"",
			"    return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor;",
			"})();"
		],
		"description": "Create client-callable ServiceNow API class with 1 constructor parameter"
	},
	"SN Ajax API Class (2 args)": {
		"scope": "typescript",
		"prefix": "sn-ajax-api-2",
		"body": [
			"interface I${1:ClassName}Base extends \\$\\$snClass.ICustomClassBase<I$1Base, \"$1\"> {",
			"    ${2:methodName}(): ${3:void};",
			"}",
			"",
			"interface I$1Prototype extends \\$\\$snClass.ICustomClassPrototype1<I$1Base, I$1Prototype, \"$1\", ${4:any}, ${5:any}>, I$1Base {",
			"    _${6:value1}?: $4;",
			"    _${7:value2}?: $5;",
			"}",
			"",
			"declare type $1 = Readonly<I$1Base>;",
			"",
			"interface $1Constructor extends \\$\\$snClass.CustomClassConstructor1<I$1Base, I$1Prototype, $1, $4> {",
			"    new($6: $4, $7: $5): $1;",
			"    ($6: $4, $7: $5): $1;",
			"",
			"    $2(): $3;",
			"}",
			"",
			"const $1: $1Constructor = (function (): $1Constructor {",
			"",
			"    var ${1/\\s*(\\S+)/${1:/downcase}/}Constructor: $1Constructor = Class.create();",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.$2 = function(): $3 {",
			"        throw new Error(\"Method not implemented\");",
			"    },",
			"",
			"    ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.prototype = Object.extendsObject<IAbstractAjaxProcessor, I$1Prototype>(global.AbstractAjaxProcessor, {",
			"",
			"        initialize($5?: $4): void {",
			"            this._$6 = $6",
			"            this._$7 = $7",
			"        },",
			"",
			"        $2(this: IAbstractAjaxProcessor & I$1Prototype): $3 {",
			"            return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor.$2();",
			"        },",
			"",
			"        type: \"$1\"",
			"",
			"    });",
			"",
			"    return ${1/\\s*(\\S+)/${1:/downcase}/}Constructor;",
			"})();"
		],
		"description": "Create client-callable ServiceNow API class with 1 constructor parameter"
	}
}